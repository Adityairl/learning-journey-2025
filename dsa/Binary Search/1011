class Solution {
public:
    bool check(int mid, vector<int>& weights, int days) {
    int n = weights.size();
    int m = mid;
    int count = 1;
    for (int i = 0; i < n; i++) {
        if (m >= weights[i]) {
            m -= weights[i];
        } else {
            count++;
            m = mid;
            m -= weights[i];
        }
        if (count > days) return false;
    }
    return true; 
}

int shipWithinDays(vector<int>& weights, int days) {
    int n = weights.size();
    int sum = 0; 
    int maxWeight = INT_MIN;
    for (int i = 0; i < n; i++) {
        if (weights[i] > maxWeight) maxWeight = weights[i];
        sum += weights[i];
    }
    int lo = maxWeight;
    int hi = sum;
    int Capacity = sum;
    while (lo <= hi) {
        int mid = lo + (hi - lo) / 2;
        if (check(mid, weights, days)) {
            Capacity = mid;
            hi = mid - 1;
        } else {
            lo = mid + 1;
        }
    }
    return Capacity;
}

};
